<launch>
  <!-- Argument to determine if we are in simulation -->
  <arg name="simulation" default="true"/>

  <!-- If we are simulating, launch Gazebo -->
  <group if="$(arg simulation)">
    <node pkg="gazebo_ros" type="gazebo" name="gazebo" args="-s libgazebo_ros_api_plugin.so" />
  </group>

  <!-- Spawn 4 Husky robots with unique namespaces and positions -->

  <!-- Husky 1 -->
  <group ns="husky_1">
    <include file="$(find husky_description)/launch/description.launch">
      <arg name="robot_namespace" value="husky_1"/>
    </include>
    <node name="robot_state_publisher_1" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="tf_prefix" value="husky_1_" />
    </node>
    <rosparam command="load" file="$(find husky_control)/config/control.yaml"/>
    <node name="controller_spawner_1" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller" />
    <node name="spawn_husky_1" pkg="gazebo_ros" type="spawn_model" args="-urdf -model husky_1 -param robot_description -x -1 -y 0 -z 0.1" />
  </group>

  <!-- Husky 2 -->
  <group ns="husky_2">
    <include file="$(find husky_description)/launch/description.launch">
      <arg name="robot_namespace" value="husky_2"/>
    </include>
    <node name="robot_state_publisher_2" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="tf_prefix" value="husky_2_" />
    </node>
    <rosparam command="load" file="$(find husky_control)/config/control.yaml"/>
    <node name="controller_spawner_2" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller" />
    <node name="spawn_husky_2" pkg="gazebo_ros" type="spawn_model" args="-urdf -model husky_2 -param robot_description -x 1 -y 0 -z 0.1" />
  </group>

  <!-- Husky 3 -->
  <group ns="husky_3">
    <include file="$(find husky_description)/launch/description.launch">
      <arg name="robot_namespace" value="husky_3"/>
    </include>
    <node name="robot_state_publisher_3" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="tf_prefix" value="husky_3_" />
    </node>
    <rosparam command="load" file="$(find husky_control)/config/control.yaml"/>
    <node name="controller_spawner_3" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller" />
    <node name="spawn_husky_3" pkg="gazebo_ros" type="spawn_model" args="-urdf -model husky_3 -param robot_description -x -1 -y 1 -z 0.1" />
  </group>

  <!-- Husky 4 -->
  <group ns="husky_4">
    <include file="$(find husky_description)/launch/description.launch">
      <arg name="robot_namespace" value="husky_4"/>
    </include>
    <node name="robot_state_publisher_4" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="tf_prefix" value="husky_4_" />
    </node>
    <rosparam command="load" file="$(find husky_control)/config/control.yaml"/>
    <node name="controller_spawner_4" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller" />
    <node name="spawn_husky_4" pkg="gazebo_ros" type="spawn_model" args="-urdf -model husky_4 -param robot_description -x 1 -y 1 -z 0.1" />
  </group>

  <!-- Use move_turtle.py for movement -->
  <node name="move_turtle_1" pkg="turtle_pentagon" type="move_turtle.py" output="screen">
    <param name="husky_ns" value="husky_1"/>
  </node> 

  <node name="move_turtle_2" pkg="turtle_pentagon" type="move_turtle.py" output="screen">
    <param name="husky_ns" value="husky_2"/>
  </node> 

  <node name="move_turtle_3" pkg="turtle_pentagon" type="move_turtle.py" output="screen">
    <param name="husky_ns" value="husky_3"/>
  </node>

  <node name="move_turtle_4" pkg="turtle_pentagon" type="move_turtle.py" output="screen">
    <param name="husky_ns" value="husky_4"/>
  </node>
</launch>
